=>Mysql DATA TYPES (Version 8)

*String Data Types
Data Type                        Description
1.CHAR(size)					A FIXED Length (can contains letter,numbers and special character). can be from 0 to 255
								Static Datatype
2.VARCHAR(size)					A Variable Length(can contains letter,numbers and special character). can be from 0 to 65535
								Dynamic Datatype
3.TEXT(size)					can be from 0 to 65535
4.TINYTEXT						can be from 0 to 255
5.MEDIUMTEXT					can be from 0 to 16777215(16 MB)
6.LONGTEXT						can be from 0 to 4294967295(4 GB)

7.BINARY(size)					Equal to CHAR()
8.VARBINARY(size)				Equal to VARCHAR()
9.BLOB(size)					FOR BLOBS can be from 0 to 65535
10.TINYBLOB						FOR BLOBS can be from 0 to 255
11.MEDIUMBLOB					FOR BLOBS can be from 0 to 16777215(16 MB)
12.LONGBLOB						FOR BLOBS can be from 0 to 4294967295(4 GB)

13.ENUM('value1','value2','value3',...)		A string object can have only one value. must be possible value.	66535 (65kb)
14.SET('value1','value2','value3',...)		A string object that can have 0 or more value.
__________________________________________________
Char

fixed length

*telephone number
*zip code
*Yes/No Flags:Y/N
*Sex  Male/Female Flags:M/F

Non-Unicode = 1 Character = 1 byte
1 byte = 8 bit
Static                             Dynamic
*Memory -> Storage
CHAR(4)  VS VARCHAR(4)
Value			CHAR(4)		Storage		VARCHAR(4)		Storage
''				'    '		4 bytes		''				1 byte
'ab'			'ab  '		4 bytes		'ab'			3 bytes
'abc'			'abc '		4 bytes		'abc'			4 bytes
'abcd'			'abcd'		4 bytes		'abcd'			5 bytes
'abcdefg'		error					error		


CREATE TABLE contacts(
	name CHAR(5)
);

INSERT INTO contacts(name)
VAKUES ('ko ko');

_______________________________________________

=>CHAR() / VARCHAR() VS TEXT()

CREATE TABLE mytests(
	id INT DEFAULT 10,
	name VARHAR(50)
);

INSERT INTO mytests(name) VALUES('aung aung');

SELECT * FROM mytests;

DROP TABLE mytests;

CREATE TABLE mytests(
	id INT,
	name VARHAR(50) DEFAULT 'nothing to show'
);

INSERT INTO mytests(name) VALUES('aung aung');

INSERT INTO mytests(id) VALUES(10);

SELECT * FROM mytests;

DROP TABLE mytests;

CREATE TABLE mytests(
	id INT DEFAULT 10,
	name TEXT(50)
);

INSERT INTO mytests(name) VALUES('aung aung');

SELECT * FROM mytests;

DROP TABLE mytests;

*error (BLOB,TEXT,GEOMETRY or JSON can't have a default value)
CREATE TABLE mytests(
	id INT,
	name TEXT(50) DEFAULT "hay now"
);

__________________________________________________

=>VARIABLES

SHOW VARIABLES;

SHOW CHARACTER SET;

*utf8_general_ci (ci is case insensitive) maxlength 3 is mean 3 bytes per character.

*SHOW CHARACTER SET = for a single Database
Method 1
*check charset
SHOW VARIABLES LIKE 'character_set_database';
*check collection
SHOW VARIABLES LIKE 'collation_database';

Method 2 (System Variables)
USE wdf2130;
SELECT @@character_set_database;

USE wdf2130;
SELECT @@collation_database;

Method 3
SELECT DEFAULT_CHARACTER_SET_NAME
FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'wdf2130';

SELECT DEFAULT_COLLATION_NAME
FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'wdf2130';

SELECT DEFAULT_CHARACTER_SET_NAME,DEFAULT_COLLATION_NAME
FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'wdf2130';

*SHOW CHARACTER SET = for ALL Database
SHOW DATABASES;
SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT SCHEMA_NAME 'databases' FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT DEFAULT_CHARACTER_SET_NAME FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT DEFAULT_CHARACTER_SET_NAME 'charset' FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT DEFAULT_COLLATION_NAME FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT DEFAULT_COLLATION_NAME 'collation' FROM INFORMATION_SCHEMA.SCHEMATA;
SELECT SCHEMA_NAME 'all database',DEFAULT_CHARACTER_SET_NAME 'charset',DEFAULT_COLLATION_NAME 'collation' FROM INFORMATION_SCHEMA.SCHEMATA;



*SHOW CHARACTER SET = for a single table
SHOW FULL COLUMNS FROM table;
SHOW TABLE STATUS WHERE NAME LIKE 'tablename';
SHOW CREATE TABLE tablename;

*SHOW CHARACTER SET = for getting the collation
SHOW FULL COLUMNS FROM tablename WHERE Field = 'name';

CREATE TABLE mytests(
	col1 TINYTEXT,
	col2 TEXT,
	col3 MEDIUMTEXT,
	col4 LONGTEXT
);

DESC mytests;

DROP TABLE mytests;

CREATE TABLE mytests(
	col1 TEXT,
	col2 TEXT(0),
	col3 TEXT(5)
);

DESC mytests;

INSERT INTO mytests(col1,col2,col3)
VALUES ('aung aung','maung maung','aung kyaw kyaw');

SELECT * FROM mytests;

DROP TABLE mytests;

CREATE TABLE mytests(
	col1 TEXT(255), -- 1-255 tinytext
	col2 TEXT(65535), -- 256-65535 text
	col3 TEXT(16777215), -- 65535-16777215 mediumtext
	col4 TEXT(4292967295) -- 16777215-4292967295 longtext
) ENGINE=InnoDB CHARSET=latin1;

DESC mytests;

CREATE TABLE mytests(
	col1 TEXT(255), -- 1-255
	col2 TEXT(65535), -- 256-65535
	col3 TEXT(16777215), -- 65535-16777215
	col4 TEXT(4292967295) -- 16777215-4292967295
) ENGINE=InnoDB CHARSET=latin2;

SHOW FULL COLUMNS FROM mytests;

SHOW TABLE STATUS WHERE NAME LIKE 'mytests';

SHOW CREATE TABLE mytests;

CREATE TABLE mytests(
	col1 TEXT(255), -- 1-255
	col2 TEXT(65535), -- 256-65535
	col3 TEXT(16777215), -- 65535-16777215
	col4 TEXT(4292967295) -- 16777215-4292967295
) ENGINE=InnoDB CHARSET=utf8;

DESC mytests;

DROP TABLE mytests;

CREATE TABLE mytests(
	col1 TEXT(85), -- 1-85 / 3 tinytext
	col2 TEXT(21845), -- 86-218455 / 3 text
	col3 TEXT(5592405), -- 218456-5592405 mediumtext
	col4 TEXT(4292967295) -- 16777215-4292967295
) ENGINE=InnoDB CHARSET=utf8;

__________________________________________________

=>Example char and binary 

CREATE TABLE mytests(
	col1 CHAR,
	col2 CHAR(255)
);

DESC mytests;
DROP mytests;

*error in 256*
CREATE TABLE mytests(
	col1 CHAR,
	col2 CHAR(256)
);

CREATE TABLE mytests(
	col1 BINARY,
	col2 BINARY(255)
);

*error in 256*
CREATE TABLE mytests(
	col1 BINARY,
	col2 BINARY(256)
);

CREATE TABLE mytests( 
	col1 BINARY(30)
);

DESC mytests;

INSERT INTO mytests (col1) VALUE ('Kyaw Kyaw Aung');

SELECT * FROM mytests;

_______________________________________________

ENUM (enumeration)

CREATE TABLE motos(
	id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	name VARCHAR(50),
	gender ENUM('M','F','Other') NULL 
);

DESC motos;

INSERT INTO motos (name,gender) VALUE('aung aung','M');

SELECT * FROM motos;

*error*
INSERT INTO motos (name,gender) VALUE('aung aung','K');
cus 'K' doesn't defind at ENUM.

INSERT INTO motos (name,gender) VALUE('aung aung',1);

INSERT INTO motos (name,gender) VALUE('aung aung',2);

INSERT INTO motos (name,gender) VALUE('aung aung',3);

*error* cus there is only 3 are defind at ENUM.
INSERT INTO motos (name,gender) VALUE('aung aung','4');

INSERT INTO motos (name,gender) VALUE('aung aung','1');

INSERT INTO motos (name,gender) VALUES('mya mya','m,f');

=>SET 
CREATE TABLE motas(
	id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	name VARCHAR(50),
	role SET('C','R','U','D') NOT NULL;
);

 INSERT INTO motas(name,role) value('aung aung','C');
 INSERT INTO motas(name,role) value('su su','d');
 INSERT INTO motas(name,role) value('nu nu',3);

*error*
 INSERT INTO motas(name,role) VALUE('su su','1,2');
 INSERT INTO motas(name,role) VALUE('su su',1,2);
 INSERT INTO motas(name,role) VALUE('su su','k');
 INSERT INTO motas(name,role) VALUE('su su','c,k');

 SELECT * FROM motas;

__________________________________________________